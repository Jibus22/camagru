name: camagru

services:
  frontend:
    image: node:18-buster-slim
    container_name: frontend
    ports:
      - 5173:5173
    working_dir: /app
    depends_on:
      - backend
    volumes:
      - ./front/:/app
      - /app/node_modules # Excludes node_modules dir from the host
    command: sh -c "npm install && npm run dev"

  backend:
    image: node:18-buster-slim
    container_name: backend
    ports:
      - 4000:4000
    working_dir: /app
    depends_on:
      postgresql_db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DEV
    secrets:
      - db-password
      - mailUser
      - mailPass
    volumes:
      - ./back/:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev"

  adminer:
    container_name: adminer
    image: adminer
    ports:
      - 8080:8080
    restart: always
    depends_on:
      - postgresql_db

  postgresql_db:
    image: postgres:15.3-alpine
    container_name: postgresql
    expose:
      - 5432
    restart: always
    user: postgres
    secrets:
      - db-password
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    volumes:
      - ./postgresql/:/docker-entrypoint-initdb.d/
      - db-data2:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 2s
      timeout: 5s
      retries: 10

volumes:
  db-data2:

secrets:
  db-password:
    file: not_so_secret/postgres-password.txt
  mailUser:
    file: secret/mailUser.txt
  mailPass:
    file: secret/mailPass.txt
